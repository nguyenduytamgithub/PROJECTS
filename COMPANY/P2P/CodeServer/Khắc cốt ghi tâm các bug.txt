Một số lưu ý khi clone đối với vps cách nhanh nhất là copy server bản snapshot
không thì phải cài lại nhiều thứ
và điều chỉnh ở code merger cho đúng tên của server .json là quan trọng nhất 
và sửa trong file reload nếu không file sinh ra là tên cũ bị mv từ reload không ghi đè lên json chính 
đã suy nghĩ trường hợp lỗi rồi thì chỉnh tay có cần chỉnh thêm gì ko, câu trả lời là ko, hãy xóa file sinh ra db là đủ
Một lỗi lớn nhất là nếu bạn tạo 1 server mẫu từ chính cái node khác thì tới lượt copy cho node đó sẽ lỗi
cách tốt nhất hãy làm 1 bản clone cho chính bản thân mình, lưu ý bản thân ko phải localhost, bản thân là ip của mình, chắc chắn chính mình cũng sẽ lỗi đầu tiên nhưng xóa đi, nhưng đứa sau clone sẽ lấy ip mình nên ko sợ nữa, còn chơi ngu lấy localhost thì xác định
Một lưu ý lớn nữa khi clone, các mqtt in ko phải là p2p_elefos002 vì cái đó là tên bản gốc, phải edit cho đúng tên mình 
--
tóm tắt: lỗi sẽ nằm ở
1 mqtt in, out không phải tên tao
2 server mẫu tạo ra (test 1 cục đi) cẩn thận là một đứa trong tương lai (fix ở **)
3 file code python và bash sai tên json 
-- không cần cục mqtt in ban đầu vì ban đầu ko nghe ở sv nào cũng dc
db mặc định có 1 mqtt_in tọa độ x y rồi
-- để cập nhật ip cho server_dht thì chắc 3 đứa mẫu kệ mẹ nó, rồi update qua git thôi, dư kệ 
=====
Một vấn đề lớn nhất để chỉnh sửa tên kênh nghe, là tao là ai, tên gì?
==> tên của t sẽ chắc chắn ko hề có trong db hiện tại => db hiện tại + 1 elefos ra tên tao
vậy tại sao cần nhớ đến tên ở lần này, vì cục này đã có sẵn trong list nên hãy tìm tên và edit lại
lần sau với cục mới cứ tra db tên cuối cùng là gì và + 1
=====
Vấn đề làm sao add một đứa mới toanh chưa tên vào db 
cần có 1 đoạn code update my ip sau đó gửi lên kèm theo mã ip để chèn vào db 
===== 
Vấn đề về loop
Nếu db connected không chứa chính bạn, nó mà tìm chính nó sẽ lỗi
==> bất kì khi nào cũng phải tự add id mình vào id connected
Hiện tại trong db 2 bản sẵn là dht được lấy từ git nên rất nhiều (code trong tương lai update thêm ko chỉ 3 cái sẵn)
mqtt_in là phải có 1 tọa độ x y
và cái thứ 3 mới ngộ ra chính là server_connected phải luôn có chính id mình và status 1
để làm được điều đó phải có 1 cái gì đó tự add khi khởi động 1 lần duy nhất ip bản thân 
Nếu chưa làm được chiệu khó thêm vào mục tự bổ sung vào db hoặc update db bằng tay mỗi khi clone
===
suy ra các công việc chỉnh tay bao gồm
đổi tên mqtt in out là id mình
thêm server_connected id mình // giải quyết được trường hợp loop vì sai tên, không sợ nữa (**)
chỉnh code merger và code reload tên json 
Vấn đề cuối là phải code thêm phần cập nhật dht nếu không là 3 đứa gốc vô dụng
================
Các bước triễn khai 1 node mới
1 cài lại server node-red
2 tải gói p2p_rasberry từ github
3 cài phpmyadmin
4 import database
5 cài đặt python hỗ trợ code trong gói github 
6 edit 1 số link từ node-red và file code python bash vì vps khác raspberry
7 nội dung cơ bản trong database cần có
===============
vừa check lại vì mqtt in out có đứa là chỉ test nên kệ mẹ nó
chúng ta chỉ lo lắng 2 đứa cần đổi tên mqtt in ở luồng chính và out ở luồng bắn xuống device
===================================================== 13_3_2019 ============================
Đã thêm tính năng backup cho tin nhắn đầu tiên ko bị mất
Các server lần đầu đã hoàn thành auto setting
Chưa làm luồng nếu như không có phản hồi tư nó, thì list đang status 0. nếu gửi và kiểm tra thấy thì phải gửi lại gói tin cài đặt, cẩn thận bên kia đã có thêm server, mqtt
Các trường hợp có thể xảy ra đó là: 
Tin nhắn gửi đi không thành công dẫn tới status = 0, gói tin cần ở lần sau sẽ được gửi lại
Nhưng có thể bên kia đã cho vào list rằng đã có cài đặt, (hay tôi đã có bạn rồi) nên ta phải đưa luồng cài đặt request trước luôn, nó cần phải check list xem đã có kết nối chưa đã
Khi đã có thì dẫn tới nó sẽ chỉ update status thôi chứ nó không có quyền insert 0 nữa, => ở luồng stt = 0 ta sẽ làm 2 việc là 1 gửi lại gói tin cài đặt, 2 là update nó về 1. Khoan...
Update về 1 khi nó nhận được gói tin cài lại chứ không phải nó tự udpate status = 1. update ở đây là của người khác gửi tới.
== Đã giải quyết bằng cách nối 1 sợi siêu dài từ đoạn status = 0. vì đã có trong list nên việc của t là, nếu tao gửi lại gói tin cài thì chạy luồng trên, còn nếu tao được yêu cầu thì tao update và gửi lại thông báo để mày update status
Siêu big problem khi tao hay mày đã là 1 rồi thì chẳng còn cơ hội check vì đi vào luồng 1 thì ko làm gì cả, nên sẽ ko có chuyện đối tác được update status :)) cần fix chỗ này

=== BUG
Nếu tao bằng 0 mà tao chưa có server bắn đi thì lỗi không bao giờ bắn được. Vì phải có server thì mới cùng lúc tạo 0. Vậy có ổn hay không nếu hôm nay t tạo 0 nhưng bắn đi bị fail
Vậy lần sau tao bắn đi sẽ không được vì luồng đó có nguy cơ bị pass qua và chạy thẳng đến gửi lại setup. Trong khi cài đặt phía cuối làm gì có mà gửi
==> Bước gửi lại gói tin khi status = 0 là sai hoàn toàn. Nếu bị thay đổi mất cái server ở mqtt cuối. => nếu bị 0 thì nhờ đến một ai đó đổi biến server ở cục mqtt cuối lại và reset toàn bộ => bước = 0 ko dán vào cục switch
=== Đã xong status 0 bằng cách tạo thêm 1 update.py để chỉ tìm lại server to cho cái mqtt đầu ra. Nếu xóa lun cục mqtt in thì nó không thể tự tạo để nghe và xóa server thì thua
====================================================== 14_3_2019 ============================
Hôm qua vẫn bị bug ở 0 - 0 status, khi bên nhận phát hiện mình = 0 thì nó lại lỗi kết nối server.
Hôm nay ghi rõ các trường hợp sẽ xảy ra 0 - 1
Đã hoàn thành các trường hợp 0 - 1, ngay cả khi bằng 1 cũng phải reset vì mqtt bị thay đổi
==== xử lý bài toán server vps làm nơi lưu và broadcast dht
chưa làm 1 cái gì đó đọc hết các giá trị tên id_server và ip public, hiện tại đang nhập tay
Kế hoạch là mỗi lần có 1 device mới thì phải tự xin ra 1 code, down xuống và chạy thì sẽ tự thêm file chứ tên ip, code, db, tự config các dòng điền tay hiện tại
=== Hiện tại đã có thể tự check có sự thay đổi của ip không trong dht rồi mới push lên vps cho broadcast. interval 1h tự kiểm tra lại ip
Thêm 1 luồng nghe để update ip trong dht, không có trường hợp insert vì server mới là người quản lý ip mới của raspberry
==== Ở server database thì phải insert rồi mới broadcast. Lần sau sẽ có thêm mã oauth để check hết tất cả device có đúng ko thì mới được vào cập nhật ip server.
Mã oauth cũng được ném xuống dưới file config của device